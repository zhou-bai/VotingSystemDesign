{"version":3,"file":"index.js","sources":["../src/controllers/RouterCtrl.ts","../src/utils/CoreUtil.ts","../src/controllers/EventsCtrl.ts","../src/controllers/OptionsCtrl.ts","../src/controllers/ConfigCtrl.ts","../src/utils/ExplorerUtil.ts","../src/controllers/ExplorerCtrl.ts","../src/controllers/ModalCtrl.ts","../src/controllers/ThemeCtrl.ts","../src/controllers/ToastCtrl.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  isTelegram() {\n    return (\n      typeof window !== 'undefined' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (Boolean((window as any).TelegramWebviewProxy) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).Telegram) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).TelegramWebviewProxyProto))\n    )\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    //  Universal link required in telegram context\n    if (safeAppUrl.startsWith('https://t.me')) {\n      // eslint-disable-next-line require-unicode-regexp\n      const formattedUri = Buffer.from(wcUri).toString('base64').replace(/[=]/g, '')\n      if (safeAppUrl.endsWith('/')) {\n        safeAppUrl = safeAppUrl.slice(0, -1)\n      }\n\n      this.setWalletConnectDeepLink(safeAppUrl, name)\n\n      const url = new URL(safeAppUrl)\n      url.searchParams.set('startapp', formattedUri)\n      const link = url.toString()\n\n      return link\n    }\n\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    const adjustedTarget = this.isTelegram() ? '_blank' : target\n    window.open(href, adjustedTarget, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'wcm'\nconst SDK_VERSION = `js-${process.env.ROLLUP_WCM_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      CoreUtil.removeWalletConnectDeepLink()\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n"],"names":["state","valtioSub","__spreadValues"],"mappings":"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"}